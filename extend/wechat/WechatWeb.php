<?php/** * 微信开放平台网站应用，浏览器环境使用 */require ('Common/Core.php');class WechatWeb extends Core{    private static $appid = 'wx7eb2e3ff2035e1c4';    private static $appsecret = 'cab23e7418edbcdbeeb218fb97f90a87';    private static $tokenUrl = 'https://open.weixin.qq.com/connect/qrconnect?appid=%s&redirect_uri=%s&response_type=code&scope=%s&state=%s#wechat_redirect'; // 浏览器中操作，获取CODE    private static $accessTokenUrl = 'https://api.weixin.qq.com/sns/oauth2/access_token?appid=%s&secret=%s&code=%s&grant_type=authorization_code';    /**GET     * @param $property_name     * @return null     */    public function __get($property_name)    {        if (isset ($this->$property_name)) {            return ($this->$property_name);        } else {            return NULL;        }    }    /**SET     * @param $property_name     * @param $value     */    public function __set($property_name, $value)    {        $this->$property_name = $value;    }    /**     * 获取CODE     * @param $redirect_uri     * @param string $scope     */    public static function validate($redirect_uri, $scope = 'snsapi_login')    {        $url = sprintf(self::$tokenUrl, self::$appid, urlencode($redirect_uri), $scope, self::guid());        header("Location:" . $url);    }    /**获取OPENID     * @param $code     * @return array|mixed     */    public static function GetOpenIdAndAccessToken($code)    {        $OpenAndAccessToken = array();        $flag = self::ReadFlag('WxOpenid');        if (!empty($flag)) {            $OpenAndAccessToken = $flag ['BaoLianWeb'] ['WxOpenid'] ['data'];        }else{            $url = sprintf ( self::$accessTokenUrl, self::$appid, self::$appsecret, $code );            $res = (new self())->HttpCurl ( $url );            $OpenAndAccessToken = json_decode($res, true);            $data = [];            $data['BaoLianWeb']['WxOpenid'] = ['create' => time(), 'data' => $OpenAndAccessToken];            self::writeFlag('WxOpenid', $data);        }        return $OpenAndAccessToken;    }    /**     * 获取用户信息     * @param $code     * @return mixed     */    public static function getUserInfo($code) {        $flag = self::ReadFlag('WxUserInfo');        if (!empty($flag)) {            $UserInfo = $flag ['BaoLian'] ['WxUserInfo'] ['data'];        }else{            //获取OpenId 和 AccessToken            $openid_token = self::GetOpenIdAndAccessToken($code);            $url = sprintf(self::getUserInfo, $openid_token['access_token'], $openid_token['openid']);            $res = (new self())->HttpCurl($url);            $UserInfo = json_decode($res, true);            $data = [];            $data['BaoLian']['WxUserInfo'] = ['create' => time(), 'data' => $UserInfo];            self::writeFlag('WxUserInfo', $data);        }        return $UserInfo;    }    /**生成 GUID     * @return string     */    private static function guid()    {        if (function_exists('com_create_guid')) {            return com_create_guid();        } else {            mt_srand((double)microtime() * 10000);//optional for php 4.2.0 and up.            $charid = strtoupper(md5(uniqid(rand(), true)));            $hyphen = chr(45);// "-"            $uuid = chr(123)// "{"                . substr($charid, 0, 8) . $hyphen                . substr($charid, 8, 4) . $hyphen                . substr($charid, 12, 4) . $hyphen                . substr($charid, 16, 4) . $hyphen                . substr($charid, 20, 12)                . chr(125);// "}"            return $uuid;        }    }}